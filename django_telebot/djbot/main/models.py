from django.db import models
from phonenumber_field.modelfields import PhoneNumberField
from phonenumber_field.widgets import PhoneNumberPrefixWidget
import uuid
from django.contrib.auth.models import AbstractUser
from django.core.exceptions import ValidationError
from django.contrib.auth import get_user_model
from datetime import datetime


def validate_superusers(value):
    User = get_user_model()
    if User.objects.filter(is_superuser=True).count() > 1:
        raise ValidationError(
            '–ë—ã–ª —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Ö–æ—Ç—è —ç—Ç–æ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—Ä–æ—á–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–∞. –í–æ–∑–º–æ–∂–Ω–∞ —É–≥—Ä–æ–∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.')


class User(AbstractUser):
    validators = [validate_superusers]

    def save(self, *args, **kwargs):
        if User.objects.all().count() > 1:
            raise ValidationError(
                '–ë—ã–ª —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Ö–æ—Ç—è —ç—Ç–æ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—Ä–æ—á–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–∞. –í–æ–∑–º–æ–∂–Ω–∞ —É–≥—Ä–æ–∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.')
        else:
            super(User, self).save(*args, **kwargs)


class Form(models.Model):
    id = models.UUIDField(
        primary_key=True,
        default=uuid.uuid4,
        editable=False)
    name = models.CharField(max_length=255, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã")
    file = models.FileField(
        verbose_name="–§–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ä–º–µ")
    is_entry = models.BooleanField(verbose_name="–Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª —Å—Ç–∞—Ä—Ç–æ–≤—ã–º?")

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = "–§–æ—Ä–º–∞ üß•"
        verbose_name_plural = "–§–æ—Ä–º–∞ üß•"


class Contact(models.Model):
    name = models.TextField(
        verbose_name="–ö–∞–∫ –æ–±—Ä–∞—â–∞—Ç—å—Å—è? –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é", max_length=255)
    phone_number = PhoneNumberField(
        verbose_name="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", help_text="–§–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞ +79123456789")

    def __str__(self):
        return f"{self.name}: {self.phone_number}"

    class Meta:
        verbose_name = "–ö–æ–Ω—Ç–∞–∫—Ç üóíÔ∏è"
        verbose_name_plural = "–ö–æ–Ω—Ç–∞–∫—Ç—ã üóíÔ∏è"


button_choices = [
    ("–î–æ–º–æ–π", "–î–æ–º–æ–π"),
    ("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"),
    ("–í–æ–ø—Ä–æ—Å", "–í–æ–ø—Ä–æ—Å"),
    ("–ö–æ–Ω—Ç–∞–∫—Ç—ã", "–ö–æ–Ω—Ç–∞–∫—Ç—ã"),
    ('–ù–∞–∑–∞–¥', '–ù–∞–∑–∞–¥'),
    ('–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥', '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥'),
    ("–§–æ—Ä–º–∞", "–§–æ—Ä–º–∞"),
    ("–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏", "–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏")
]


class Button(models.Model):
    id = models.UUIDField(
        primary_key=True,
        default=uuid.uuid4,
        editable=False)

    name = models.CharField(max_length=255, verbose_name="–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏",
                            help_text="–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ —Å–∞–º–æ–º —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ")
    role = models.CharField(choices=button_choices,
                            verbose_name="–†–æ–ª—å –∫–Ω–æ–ø–∫–∏",
                            max_length=50)

    def __str__(self):
        return f"–ö–Ω–æ–ø–∫–∞ '{self.name}' —Å —Ä–æ–ª—å—é {self.role}"

    class Meta:
        verbose_name = "–ö–Ω–æ–ø–∫–∞ üîò"
        verbose_name_plural = "–ö–Ω–æ–ø–∫–∏ üîò"


class Specialisation(models.Model):
    id = models.UUIDField(
        primary_key=True,
        default=uuid.uuid4,
        editable=False)
    name = models.CharField(
        max_length=255, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏")
    file = models.FileField(
        verbose_name="–§–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏")
    is_entry = models.BooleanField(verbose_name="–Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª —Å—Ç–∞—Ä—Ç–æ–≤—ã–º?")

    class Meta:
        verbose_name = "–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å üåê"
        verbose_name_plural = "–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ üåê"

    def __str__(self):
        return f"–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å: {self.name}"


message_choices = (
    ('–ü—Ä–∏–≤–µ—Ç', "–ü—Ä–∏–≤–µ—Ç"),
    ("–í–µ—Ä–Ω—É—Ç—å—Å—è –¥–æ–º–æ–π", "–í–µ—Ä–Ω—É—Ç—å—Å—è –¥–æ–º–æ–π"),
    ("–û —á–µ–º —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å", "–û —á–µ–º —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å"),
    ("–ö–∞–∫ –∑–≤—É—á–∏—Ç –≤–æ–ø—Ä–æ—Å", "–ö–∞–∫ –∑–≤—É—á–∏—Ç –≤–æ–ø—Ä–æ—Å"),
    ("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∏–∞–ª–æ–≥–∞", "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∏–∞–ª–æ–≥–∞"),
    ("–ü–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É", "–ü–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É"),
    ("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã", "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã"),
    ("–ù–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤", "–ù–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"),
    ("–î–æ—Å—Ç—É–ø–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—è—Ö",
     "–î–æ—Å—Ç—É–ø–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—è—Ö"),
    ("–î–æ—Å—Ç—É–ø–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–æ—Ä–º–µ", "–î–æ—Å—Ç—É–ø–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–æ—Ä–º–µ"),
    ("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è", "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è"),
    ("–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞", "–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞")
)


class BotMessage(models.Model):
    id = models.UUIDField(
        primary_key=True,
        default=uuid.uuid4,
        editable=False)
    name = models.TextField(
        max_length=1000, verbose_name="–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
    role = models.CharField(choices=message_choices,
                            max_length=200, verbose_name="–†–æ–ª—å —Å–æ–æ–±—â–µ–Ω–∏—è")

    class Meta:
        verbose_name = "–°–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ ü§ñ"
        verbose_name_plural = "–°–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ ü§ñ"

    def __str__(self):
        return f"–°–æ–æ–±—â–µ–Ω–∏–µ {self.name}"


class UserMessage(models.Model):
    id = models.UUIDField(
        primary_key=True,
        default=uuid.uuid4,
        editable=False)

    date_timestamp = models.BigIntegerField(
        verbose_name="–î–∞—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≤–∏–¥–µ timestamp")
    username = models.CharField(
        max_length=255, verbose_name="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ @Test123")
    content = models.TextField(
        max_length=5000, verbose_name="–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
    date = models.CharField(
        max_length=1000, verbose_name="–î–∞—Ç–∞ –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º –≤–∏–¥–µ", editable=False, blank=True, null=True)
    user_id = models.CharField(
        max_length=255, verbose_name="–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ")

    def save(self, *args, **kwargs):
        self.date = datetime.fromtimestamp(self.date_timestamp)
        super(UserMessage, self).save(*args, **kwargs)

    def __str__(self):
        return f"–°–æ–æ–±—â–µ–Ω–∏–µ {self.username}: {self.content}

    class Meta:
        verbose_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ üìî"
        verbose_name_plural = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è üìî"


class BotConfiguration(models.Model):
    bot_token = models.TextField(
        max_length=1000,
        verbose_name="–¢–æ–∫–µ–Ω –¥–ª—è –±–æ—Ç–∞")
    admin_chat_id = models.TextField(max_length=50,
                                     verbose_name="Id –∞–¥–º–∏–Ω —á–∞—Ç–∞ –¥–ª—è –±–æ—Ç–∞",
                                     help_text="–ß–∞—Ç –±–æ—Ç –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç"
                                     )
    is_in_use = models.BooleanField(
        verbose_name="–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ –¥–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤ –±–æ—Ç–µ?")

    def __str__(self):
        return f"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞ {self.id}"

    class Meta:
        verbose_name = "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞ ü§ñ"
        verbose_name_plural = "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞ ü§ñ"
