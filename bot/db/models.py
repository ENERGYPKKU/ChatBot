from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship
from sqlalchemy import Table, Column, Integer, ForeignKey
from sqlalchemy import Column, Integer, BigInteger, String
from sqlalchemy.orm import declarative_base
# from database import db_session, init_db

Base = declarative_base()
# Base.query = db_session.query_property()


class PlayerScore(Base):
    __tablename__ = "playerscore"

    id = Column(BigInteger, primary_key=True,
                unique=True, autoincrement=False)
    user_name = Column(String)
    score = Column(BigInteger, default=0)


class Specialization(Base):
    __tablename__ = "–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ üåê"

    id = Column(
        "–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏",
        BigInteger,
        primary_key=True,
        unique=True,
        autoincrement=True)
    code = Column("–ö–æ–¥ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏", String)
    name = Column("–ù–∞–∑–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏", String)
    time_education = Column("–°—Ä–æ–∫ –æ–±—É—á–µ–Ω–∏—è", String)
    education_ways = Column("–§–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è", String)
    # specializations_education_objects = relationship(
    #     "SpecializationEducationObject")


class SpecializationEducationObject(Base):
    __tablename__ = "–ü—Ä–µ–¥–º–µ—Ç—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏"

    id = Column(BigInteger, primary_key=True,
                unique=True, autoincrement=False)
    code = Column("–ö–æ–¥ –ø—Ä–µ–¥–º–µ—Ç–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏", String)
    name = Column("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏", String)


class User(Base):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)
    username = Column(String(100), unique=True, nullable=False)
    password = Column(String(100), nullable=False)
